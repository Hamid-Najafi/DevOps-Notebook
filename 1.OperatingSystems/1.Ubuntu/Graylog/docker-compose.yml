networks:
  graylog-network:
    driver: "bridge"
  traefik-network:
    external: true

volumes:
  graylog-mongodb-data:
    external: true
  graylog-mongodb-config:
    external: true
  graylog-datanode:
    external: true
  graylog-data:
    external: true

# For DataNode setup, graylog starts with a preflight UI, this is a change from just using OpenSearch/Elasticsearch.
# Please take a look at the README at the top of this repo or the regular docs for more info.

services:
  mongodb:
    image: ${GRAYLOG_MONGO_IMAGE}
    container_name: graylog-mongodb
    restart: unless-stopped
    networks:
      - graylog-network
    volumes:
      - graylog-mongodb-data:/data/db
      - graylog-mongodb-config:/data/configdb
    mem_limit: 2g
    cpus: "1.0"

  datanode:
    image: ${GRAYLOG_DATANODE_IMAGE}
    hostname: "datanode"
    container_name: graylog-datanode
    environment:
      GRAYLOG_DATANODE_NODE_ID_FILE: "/var/lib/graylog-datanode/node-id"
      GRAYLOG_DATANODE_PASSWORD_SECRET: ${GRAYLOG_PASSWORD_SECRET}
      GRAYLOG_DATANODE_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "8999:8999/tcp"   # DataNode API
      - "9200:9200/tcp"
      - "9300:9300/tcp"
    networks:
      - graylog-network
    volumes:
      - graylog-datanode:/var/lib/graylog-datanode
    restart: unless-stopped
    mem_limit: 8g
    cpus: "4.0"

  graylog:
    hostname: "server"
    image: ${GRAYLOG_IMAGE}
    container_name: graylog
    depends_on:
      mongodb:
        condition: "service_started"
      datanode:
        condition: "service_started"
    entrypoint: "/usr/bin/tini --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/data/node-id"
      # GRAYLOG_DATANODE_PASSWORD_SECRET and GRAYLOG_PASSWORD_SECRET MUST be the same value
      GRAYLOG_PASSWORD_SECRET: ${GRAYLOG_PASSWORD_SECRET}
      GRAYLOG_ROOT_PASSWORD_SHA2: ${GRAYLOG_ROOT_PASSWORD_SHA2}
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: ${GRAYLOG_HOSTNAME}
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ports:
    - "5044:5044/tcp"   # Beats
    # - "514:514/udp"
    # - "514:514/tcp"
    - "5140:5140/udp"   # Syslog
    - "5140:5140/tcp"   # Syslog
    - "5555:5555/tcp"   # RAW TCP
    - "5555:5555/udp"   # RAW UDP
    - "9000:9000/tcp"   # Server API
    - "12201:12201/tcp" # GELF TCP
    - "12201:12201/udp" # GELF UDP
    #- "10000:10000/tcp" # Custom TCP port
    #- "10000:10000/udp" # Custom UDP port
    - "13301:13301/tcp" # Forwarder data
    - "13302:13302/tcp" # Forwarder config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.graylog.rule=Host(`${GRAYLOG_HOSTNAME}`)"
      - "traefik.http.routers.graylog.service=graylog"
      - "traefik.http.routers.graylog.entrypoints=websecure"
      - "traefik.http.services.graylog.loadbalancer.server.port=9000"
      - "traefik.http.routers.graylog.tls=true"
      - "traefik.http.routers.graylog.tls.certresolver=letsencrypt"
      - "traefik.http.services.graylog.loadbalancer.passhostheader=true"
      - "traefik.docker.network=traefik-network"
    networks:
      - graylog-network
      - traefik-network
    volumes:
      - graylog-data:${GRAYLOG_DATA_PATH}
    restart: unless-stopped
    mem_limit: 4g
    cpus: "2.0"