networks:
  traefik-network:
    external: true

volumes:
  traefik-certificates:
    external: true

services:
  traefik:
    image: ${TRAEFIK_IMAGE_TAG}
    container_name: traefik
    environment:
      - TZ=${TRAEFIK_TIMEZONE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      #- ./traefik.yml:/traefik.yml:ro
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./dynamic_conf:/etc/traefik/dynamic_conf
      - traefik-certificates:/etc/traefik/acme
    networks:
      - traefik-network
    ports:
      - "80:80"
      - "443:443"
      # Prometheus
      - "9094:9094"
      # Zabbix forward
      # - "10050:10050"
      # - "10051:10051"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    labels:
    # Enable Traefik
      - "traefik.enable=true"

      # Traefik Dashboard
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_HOSTNAME}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.services.dashboard.loadbalancer.server.port=80"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.dashboard.loadbalancer.passhostheader=true"
      # Dashboard Authentication
      - "traefik.http.routers.dashboard.middlewares=authentik@docker"

      # Redirect HTTP to HTTPS
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=webinsecure"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # Global security headers middleware
      - "traefik.http.middlewares.global-security.headers.customresponseheaders.X-Content-Type-Options=nosniff"
      - "traefik.http.middlewares.global-security.headers.customresponseheaders.X-Frame-Options=DENY"
      - "traefik.http.middlewares.global-security.headers.customresponseheaders.X-XSS-Protection=1; mode=block"
      - "traefik.http.middlewares.global-security.headers.customresponseheaders.Referrer-Policy=no-referrer-when-downgrade"
      - "traefik.http.middlewares.global-security.headers.customresponseheaders.Permissions-Policy=geolocation=(), microphone=(), camera=()"
      - "traefik.http.middlewares.global-security.headers.customresponseheaders.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload"
      - "traefik.http.middlewares.global-security.headers.customresponseheaders.Content-Security-Policy=default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; font-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';"
      - "traefik.http.middlewares.global-security.headers.sslredirect=true"
      - "traefik.http.middlewares.global-security.headers.browserxssfilter=true"

      # Compress responses
      - "traefik.http.middlewares.compress.compress=true"

      # Monitoring Prometheus
      # - "traefik.http.services.prometheus.loadbalancer.server.port=9094"
      # - "traefik.http.routers.prometheus.rule=PathPrefix(`/metrics`)"
      # - "traefik.http.routers.prometheus.entrypoints=metrics"
      # - "traefik.http.routers.prometheus.service=prometheus@internal"
      # - "traefik.http.routers.prometheus.middlewares=prometheusauth"
      # - "traefik.http.middlewares.prometheusauth.basicauth.users=${TRAEFIK_BASIC_AUTH}"
    restart: unless-stopped