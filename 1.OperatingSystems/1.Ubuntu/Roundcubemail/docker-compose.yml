networks:
  roundcubemail-network:
    external: true
  traefik-network:
    external: true
  mailserver-network:
    external: true

volumes:
  roundcubemail-postgres:
    external: true

services:
  roundcubemail:
    image: ${ROUNDCUBEMAIL_IMAGE_TAG}
    restart: unless-stopped
    container_name: roundcubemail
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ROUNDCUBEMAIL_DEFAULT_HOST=${ROUNDCUBEMAIL_DEFAULT_HOST}
      - ROUNDCUBEMAIL_DEFAULT_PORT=${ROUNDCUBEMAIL_DEFAULT_PORT}
      - ROUNDCUBEMAIL_SMTP_SERVER=${ROUNDCUBEMAIL_SMTP_SERVER}
      - ROUNDCUBEMAIL_SMTP_PORT=${ROUNDCUBEMAIL_SMTP_PORT}
      - ROUNDCUBEMAIL_UPLOAD_MAX_FILESIZE=${ROUNDCUBEMAIL_UPLOAD_MAX_FILESIZE}
      - ROUNDCUBEMAIL_DB_TYPE=${ROUNDCUBEMAIL_DB_TYPE}
      - ROUNDCUBEMAIL_DB_HOST=${ROUNDCUBEMAIL_DB_HOST}
      - ROUNDCUBEMAIL_DB_USER=${ROUNDCUBEMAIL_DB_USER}
      - ROUNDCUBEMAIL_DB_PASSWORD=${ROUNDCUBEMAIL_DB_PASSWORD}
      - ROUNDCUBEMAIL_DB_NAME=${ROUNDCUBEMAIL_DB_NAME}
      - ROUNDCUBEMAIL_COMPOSER_PLUGINS="weird-birds/thunderbird_labels,jfcherng-roundcube/show-folder-size,germancoding/tls_icon:^1.2"
      - ROUNDCUBEMAIL_PLUGINS=thunderbird_labels, show_folder_size, tls_icon
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.roundcubemail.rule=Host(`${ROUNDCUBEMAIL_HOSTNAME}`)"
      - "traefik.http.services.roundcubemail.loadbalancer.server.port=80"
      - "traefik.http.routers.roundcubemail.entrypoints=websecure"
      - "traefik.http.routers.roundcubemail.tls.certresolver=letsencrypt"
      - "traefik.docker.network=traefik-network"
    # volumes:
    #   - ./config:/var/roundcube/config/
    networks:
      - traefik-network
      - roundcubemail-network
      # - mailserver-network

  postgres:
    image: ${ROUNDCUBEMAIL_POSTGRES_IMAGE_TAG}
    container_name: roundcubemail-postgres
    volumes:
      - roundcubemail-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${ROUNDCUBEMAIL_DB_NAME}
      POSTGRES_USER: ${ROUNDCUBEMAIL_DB_USER}
      POSTGRES_PASSWORD: ${ROUNDCUBEMAIL_DB_PASSWORD}
    networks:
      - roundcubemail-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${ROUNDCUBEMAIL_DB_NAME}", "-U", "${ROUNDCUBEMAIL_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped