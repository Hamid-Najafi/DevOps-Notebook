networks:
  gitlab-network:
    external: true
  traefik-network:
    external: true

volumes:
  gitlab-data:
    external: true
  gitlab-logs:
    external: true
  gitlab-config:
    external: true
  gitlab-postgres:
    external: true
  gitlab-redis:
    external: true
  # gitlab-runner-config:
  #   external: true
services:

  gitlab:
    image: ${GITLAB_IMAGE_TAG}
    container_name: gitlab
    volumes:
      - gitlab-data:/var/opt/gitlab
      - gitlab-logs:/var/log/gitlab
      - gitlab-config:/etc/gitlab
    shm_size: "256m"
    networks:
      - gitlab-network
      - traefik-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 240s
    # ports:
    #   - "80:80"
    #   - "443:443"
    #   - "22:22"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitlab.rule=Host(`${GITLAB_HOSTNAME}`)"
      - "traefik.http.routers.gitlab.service=gitlab"
      - "traefik.http.routers.gitlab.entrypoints=websecure"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
      - "traefik.http.routers.gitlab.tls=true"
      - "traefik.http.routers.gitlab.tls.certresolver=letsencrypt"
      - "traefik.http.services.gitlab.loadbalancer.passhostheader=true"
      - "traefik.tcp.routers.gitlab-ssh.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.gitlab-ssh.service=gitlab-ssh"
      - "traefik.tcp.routers.gitlab-ssh.entrypoints=ssh"
      - "traefik.tcp.services.gitlab-ssh.loadbalancer.server.port=22"
      - "traefik.docker.network=traefik-network"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
  postgres:
    image: ${GITLAB_POSTGRES_IMAGE_TAG}
    container_name: gitlab-postgres
    volumes:
      - gitlab-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${GITLAB_DB_NAME}
      POSTGRES_USER: ${GITLAB_DB_USER}
      POSTGRES_PASSWORD: ${GITLAB_DB_PASSWORD}
    networks:
      - gitlab-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${GITLAB_DB_NAME}", "-U", "${GITLAB_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  redis:
    image: ${GITLAB_REDIS_IMAGE_TAG}
    container_name: gitlab-redis
    command: ["redis-server", "--requirepass", "${GITLAB_REDIS_PASSWORD}"]
    volumes:
      - gitlab-redis:/data
    networks:
      - gitlab-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${GITLAB_REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # gitlab-runner-1:
  #   image: ${GITLAB_RUNNER_IMAGE_TAG}
  #   container_name: gitlab-runner-1
  #   volumes:
  #     - gitlab-runner-config:/etc/gitlab-runner
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #     - gitlab-network
  #   restart: unless-stopped