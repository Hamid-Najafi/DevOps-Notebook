networks:
  postgres-network:
    external: true
  traefik-network:
    external: true

volumes:
  postgres-data:
    external: true
  postgresql-pgadmin:
    external: true

version: "3.5"
services:
  postgres:
    image: ${POSTGRES_IMAGE_TAG}
    hostname: ${POSTGRES_HOSTNAME}
    restart: unless-stopped
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_DB_USER}
      - POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - postgres-network

  pgadmin:
    image: ${PGADMIN_IMAGE_TAG}
    hostname: ${POSTGRES_HOSTNAME}
    container_name: postgres-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@c1tech.group
      - PGADMIN_DEFAULT_PASSWORD=pgAdminpass.24
    restart: unless-stopped
    # Handeled by traefik
    # ports:
    # - "8081:80"
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`${PORTAINER_FRONTEND_HOSTNAME}`)"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.pgadmin.service=pgadmin"
      - "traefik.http.routers.pgadmin.entrypoints=secure"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.routers.pgadmin.tls.certresolver=letsencrypt"
      - "traefik.http.routers.pgadmin.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"
      - "traefik.docker.network=traefik-network"
    volumes:
       - postgres-pgadmin:/var/lib/pgadmin
    networks:
      - postgres-network
      - traefik-network