networks:
  traefik-network:
    external: true

volumes:
  traefik-certificates:
    external: true

services:
  traefik:
    image: ${TRAEFIK_IMAGE_TAG}
    container_name: traefik
    environment:
      - TZ=${TRAEFIK_TIMEZONE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/traefik.yml:ro
      - traefik-certificates:/etc/traefik/acme
    networks:
      - traefik-network
    ports:
      - "80:80"
      - "443:443"
      # Prometheus
      - "9094:9094"
      # Zabbix forward
      # - "10050:10050"
      # - "10051:10051"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    labels:
      - "traefik.enable=true"
      # Docker labels for enabling Traefik dashboard
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_HOSTNAME}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=secure"
      - "traefik.http.services.dashboard.loadbalancer.server.port=80"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.dashboard.loadbalancer.passhostheader=true"
      - "traefik.http.routers.dashboard.middlewares=authtraefik"
      - "traefik.http.middlewares.authtraefik.basicauth.users=${TRAEFIK_BASIC_AUTH}"
      # Redirect to HTTPS middlewares
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=insecure"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      # Compressing the Response before Sending it to the Client
      - "traefik.http.routers.traefik.middlewares=traefik-compress"
      - "traefik.http.middlewares.traefik-compress.compress=true"
      # Monitoring Traefik With Prometheus
      # - traefik.http.services.prometheus.loadbalancer.server.port=9092
      - "traefik.http.routers.prometheus.rule=PathPrefix(`/metrics`)"
      - "traefik.http.routers.prometheus.entrypoints=metrics"
      - "traefik.http.routers.prometheus.service=prometheus@internal"
      - "traefik.http.routers.prometheus.middlewares=prometheusauth"
      - "traefik.http.middlewares.prometheusauth.basicauth.users=${TRAEFIK_BASIC_AUTH}"
    restart: unless-stopped


