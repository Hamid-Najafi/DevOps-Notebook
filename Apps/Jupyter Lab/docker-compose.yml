networks:
  traefik-network:
    external: true

volumes:
  jupyter-work:
    external: true
  jupyter-env:
    external: true
 
services:
  jupyter:
    image: ${JUPYTER_IMAGE_TAG}
    hostname: jupyter
    container_name: jupyter
    restart: unless-stopped
    environment:
      - CHOWN_EXTRA=/home/${NOTEBOOK_USER}/work
      - CHOWN_EXTRA_OPTS=-R
      - NB_UID=1000
      - NB_GID=100
      - NB_USER=${NOTEBOOK_USER}
      - NB_GROUP=users
      - JUPYTER_ENABLE_LAB=yes
      - CHOWN_HOME=yes
      - CHOWN_HOME_OPTS=-R
      - JUPYTER_TOKEN=${JUPYTER_TOKEN}
      - PASSWORD_HASH=${PASSWORD_HASH}
      - NVIDIA_VISIBLE_DEVICES=all
    runtime: nvidia
    ports:
      - "8888:8888"
    volumes:
      - jupyter-work:/home/${NOTEBOOK_USER}/work
      - jupyter-env:/home/${NOTEBOOK_USER}/work/environments
    working_dir: /home/${NOTEBOOK_USER}/work
    command:
      /bin/bash -c "if ls /home/${NOTEBOOK_USER}/work/environments/*.yml >/dev/null 2>&1; then \
      for f in /home/${NOTEBOOK_USER}/work/environments/*.yml; do \
      env_name=$$(basename $${f%.yml}); \
      if conda env list | grep -q $${env_name}; then \
      echo \"Environment $${env_name} already exists. Skipping...\"; \
      else \
      echo \"Creating environment $${env_name}...\"; \
      conda env create --quiet --name $${env_name} --file $${f}; \
      fi; \
      done; \
      else \
      echo \"No environment files found. Creating default environment...\"; \
      conda install --quiet --yes numpy; \
      fi && \
      conda clean --all -f -y && \
      fix-permissions \"/opt/conda\" && \
      fix-permissions \"/home/${NOTEBOOK_USER}\" && \
      start-notebook.sh --NotebookApp.token='${JUPYTER_TOKEN}' --NotebookApp.allow_password_change=True --NotebookApp.password='${PASSWORD_HASH}'"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jupyter.rule=Host(`${JUPYTER_HOSTNAME}`)"
      - "traefik.http.routers.jupyter.service=jupyter"
      - "traefik.http.routers.jupyter.entrypoints=websecure"
      - "traefik.http.services.jupyter.loadbalancer.server.port=8888"
      - "traefik.http.routers.jupyter.tls=true"
      - "traefik.http.routers.jupyter.tls.certresolver=letsencrypt"
      - "traefik.http.services.jupyter.loadbalancer.passhostheader=true"
      - "traefik.docker.network=traefik-network"
    user: root
    env_file:
      - .env