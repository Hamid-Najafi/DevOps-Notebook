networks:
  jira-network:
    external: true
  traefik-network:
    external: true

volumes:
  jira-postgres:
    external: true
  jira-data:
    external: true

services:
  jira:
    image: ${JIRA_IMAGE_TAG}
    restart: unless-stopped
    container_name: jira
    environment:
    # https://hub.docker.com/r/atlassian/jira-software
      JVM_MINIMUM_MEMORY: ${JIRA_JVM_MINIMUM_MEMORY}
      JVM_MAXIMUM_MEMORY: ${JIRA_JVM_MAXIMUM_MEMORY}
      JVM_RESERVED_CODE_CACHE_SIZE: ${JIRA_JVM_RESERVED_CODE_CACHE_SIZE}
      # These Proxy ENVs, doenst works! copy server.xml file into container
      ATL_PROXY_NAME: ${JIRA_HOSTNAME}
      ATL_TOMCAT_SECURE: 'true'
      ATL_TOMCAT_SCHEME: https
      ATL_PROXY_PORT: 443
      CATALINA_CONNECTOR_PROXYNAME: ${JIRA_HOSTNAME}
      CATALINA_CONNECTOR_PROXYPORT: 443
      CATALINA_CONNECTOR_SCHEME: https
      CATALINA_CONNECTOR_SECURE: true
      ATL_DB_TYPE: postgres72
      ATL_DB_DRIVER: org.postgresql.Driver
      ATL_JDBC_USER: ${JIRA_DB_USER}
      ATL_JDBC_PASSWORD: ${JIRA_DB_PASSWORD}
      ATL_JDBC_URL: jdbc:postgresql://postgres:5432/${JIRA_DB_NAME}
      JVM_CODE_CACHE_ARGS: ' -XX:InitialCodeCacheSize=1g -XX:ReservedCodeCacheSize=8g'
      TZ: ${JIRA_TIMEZONE}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    # ports:
    #   - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
    labels:
    # This is a special One!
      - "traefik.enable=true"
      - "traefik.http.routers.jira.rule=Host(`${JIRA_HOSTNAME}`)"
      - "traefik.http.services.jira.loadbalancer.server.port=8080"
      - "traefik.http.routers.jira.entrypoints=websecure"
      - "traefik.http.routers.jira.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.jira-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jira.service=jira"
      - "traefik.http.routers.jira.tls=true"
      - "traefik.http.services.jira.loadbalancer.passhostheader=true"
      - "traefik.http.routers.jira.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"
      - "traefik.docker.network=traefik-network"
    volumes:
      - jira-data:${JIRA_DATA_PATH}
    networks:
      - jira-network
      - traefik-network

  postgres:
    image: ${JIRA_POSTGRES_IMAGE_TAG}
    restart: unless-stopped
    container_name: jira-postgres
    environment:
      POSTGRES_DB: ${JIRA_DB_NAME}
      POSTGRES_USER: ${JIRA_DB_USER}
      POSTGRES_PASSWORD: ${JIRA_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: --lc-collate C --lc-ctype C.UTF-8
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${JIRA_DB_NAME}", "-U", "${JIRA_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    volumes:
      - jira-postgres:/var/lib/postgresql/data
    networks:
      - jira-network