networks:
  bitbucket-network:
    external: true
  traefik-network:
    external: true

volumes:
  bitbucket-postgres:
    external: true
  bitbucket-data:
    external: true

services:
  bitbucket:
    image: ${BITBUCKET_IMAGE_TAG}
    restart: unless-stopped
    container_name: bitbucket
    environment:
      # https://hub.docker.com/r/atlassian/bitbucket-server
      JVM_MINIMUM_MEMORY: ${BITBUCKET_JVM_MINIMUM_MEMORY}
      JVM_MAXIMUM_MEMORY: ${BITBUCKET_JVM_MAXIMUM_MEMORY}
      SERVER_PROXY_NAME : ${BITBUCKET_HOSTNAME}
      SERVER_SECURE : 'true'
      SERVER_SCHEME : https
      SERVER_PROXY_PORT : 443
      # ATL_DB_TYPE: postgres72
      SETUP_DISPLAYNAME: Bitbucket
      SETUP_BASEURL: ${BITBUCKET_URL}
      JDBC_DRIVER: org.postgresql.Driver
      JDBC_USER: ${BITBUCKET_DB_USER}
      JDBC_PASSWORD: ${BITBUCKET_DB_PASSWORD}
      JDBC_URL: jdbc:postgresql://postgres:5432/${BITBUCKET_DB_NAME}
      TZ: ${BITBUCKET_TIMEZONE}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7990/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    # ports:
    #   - "7990:7990"
    #   - "7999:7999"
    depends_on:
      postgres:
        condition: service_healthy
    labels:
    # This is a special One!
      - "traefik.enable=true"
      - "traefik.http.routers.bitbucket.rule=Host(`${BITBUCKET_HOSTNAME}`)"
      - "traefik.http.services.bitbucket.loadbalancer.server.port=7990"
      - "traefik.http.routers.bitbucket.entrypoints=websecure"
      - "traefik.http.routers.bitbucket.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.bitbucket-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.bitbucket.service=bitbucket"
      - "traefik.http.routers.bitbucket.tls=true"
      - "traefik.http.services.bitbucket.loadbalancer.passhostheader=true"
      - "traefik.docker.network=traefik-network"
    volumes:
      - bitbucket-data:${BITBUCKET_DATA_PATH}
    networks:
      - bitbucket-network
      - traefik-network

  postgres:
    image: ${BITBUCKET_POSTGRES_IMAGE_TAG}
    restart: unless-stopped
    container_name: bitbucket-postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${BITBUCKET_DB_NAME}", "-U", "${BITBUCKET_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    environment:
      POSTGRES_DB: ${BITBUCKET_DB_NAME}
      POSTGRES_USER: ${BITBUCKET_DB_USER}
      POSTGRES_PASSWORD: ${BITBUCKET_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: --lc-collate C --lc-ctype C.UTF-8
    volumes:
      - bitbucket-postgres:/var/lib/postgresql/data
    networks:
      - bitbucket-network