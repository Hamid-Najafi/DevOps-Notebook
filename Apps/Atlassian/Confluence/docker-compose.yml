networks:
  confluence-network:
    external: true
  traefik-network:
    external: true

volumes:
  confluence-postgres:
    external: true
  confluence-data:
    external: true

services:
  confluence:
    image: ${CONFLUENCE_IMAGE_TAG}
    restart: unless-stopped
    container_name: confluence
    environment:
    # https://hub.docker.com/r/atlassian/confluence-server
      JVM_MINIMUM_MEMORY: ${CONFLUENCE_JVM_MINIMUM_MEMORY}
      JVM_MAXIMUM_MEMORY: ${CONFLUENCE_JVM_MAXIMUM_MEMORY}
      ATL_PROXY_NAME: ${CONFLUENCE_HOSTNAME}
      ATL_TOMCAT_SECURE: 'true'
      ATL_TOMCAT_SCHEME: https
      ATL_PROXY_PORT: 443
      ATL_DB_TYPE: postgres72
      ATL_DB_DRIVER: org.postgresql.Driver
      ATL_JDBC_USER: ${CONFLUENCE_DB_USER}
      ATL_JDBC_PASSWORD: ${CONFLUENCE_DB_PASSWORD}
      ATL_JDBC_URL: jdbc:postgresql://postgres:5432/${CONFLUENCE_DB_NAME}
      JVM_CODE_CACHE_ARGS: ' -XX:InitialCodeCacheSize=1g -XX:ReservedCodeCacheSize=8g'
      TZ: ${CONFLUENCE_TIMEZONE}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    # ports:
    #   - 8090:8090
    depends_on:
      postgres:
        condition: service_healthy
    labels:
    # This is a special One!
      - "traefik.enable=true"
      - "traefik.http.routers.confluence.rule=Host(`${CONFLUENCE_HOSTNAME}`)"
      - "traefik.http.services.confluence.loadbalancer.server.port=8090"
      - "traefik.http.routers.confluence.entrypoints=websecure"
      - "traefik.http.routers.confluence.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.confluence-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.confluence.service=confluence"
      - "traefik.http.routers.confluence.tls=true"
      - "traefik.http.services.confluence.loadbalancer.passhostheader=true"
      - "traefik.docker.network=traefik-network"
    volumes:
      - confluence-data:${CONFLUENCE_DATA_PATH}
    networks:
      - traefik-network
      - confluence-network
  
  postgres:
    image: ${CONFLUENCE_POSTGRES_IMAGE_TAG}
    restart: unless-stopped
    container_name: confluence-postgres
    environment:
      POSTGRES_DB: ${CONFLUENCE_DB_NAME}
      POSTGRES_USER: ${CONFLUENCE_DB_USER}
      POSTGRES_PASSWORD: ${CONFLUENCE_DB_PASSWORD}
      POSTGRES_INITDB_ARGS: --lc-collate C --lc-ctype C.UTF-8
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${CONFLUENCE_DB_NAME}", "-U", "${CONFLUENCE_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    volumes:
      - confluence-postgres:/var/lib/postgresql/data
    networks:
      - confluence-network